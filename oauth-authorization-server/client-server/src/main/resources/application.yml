server:
  port: 8080

  servlet:
    session:
      cookie:
        name: JSESSIONID  # **Aynı session çerezini kullan**
        #same-site: none  # **Üçüncü taraf çerezlere izin ver**
        secure: false  # **Lokal test için**


logging:
  level:
    org.springframework:
      security: TRACE
      web.client: TRACE
      session: DEBUG
      data:
        redis: INFO

spring:
  session:
    store-type: redis
    redis:
      namespace: sso-dashboard-session
  data:
    redis:
      repositories:
        enabled: false
  redis:
    host: localhost
    port: 6379
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2
    username: postgres
    password: LFB2023!!q
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          sso-dashboard-client:
            provider: custom-provider
            client-id: sso-dashboard-client
            client-secret: "secret"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/sso-dashboard-client"
            scope: openid, profile, email
        provider:
          custom-provider:
            issuer-uri: https://a867-176-240-136-21.ngrok-free.app
            authorization-uri: http://localhost:9000/oauth2/authorize
            token-uri: http://localhost:9000/oauth2/token
            user-info-uri: http://localhost:9000/userinfo
            user-name-attribute: email
          custom-auth-server:
            issuer-uri: http://localhost:9000
